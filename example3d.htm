<!DOCTYPE html>
<!-- saved from url=(0043)https://klacansky.com/open-scivis-datasets/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        
        <title>ViSUS WebViewer 3D</title>

</head>


<body>

<div id="viewer">
        <canvas width="800" height="800"></canvas>
        <div>
                <label>Resolution:<input id="resolution_select" type="range" step="1"></label>
                <button>Submit</button>

                <label>Isovalue:<input id="isovalue_select" type="range" step="0.01"></label>
                <!-- <a onclick="vr_present()">VR</a> -->
        </div>
</div>

<!-- <details ontoggle="load_dataset(this, &#39;aneurism&#39;, {level: 24, width: 256, height: 256, depth: 256}, &#39;uint8&#39;, {width: 256.0, height: 256.0, depth: 256.0})"/> -->

<script src="./src3d/colormaps.js"></script>
<script src="./src3d/dvr.js"></script>
<script src="./src3d/visus.js"></script>

<script>


window.onload = function() {
  //load_dataset(this, 'aneurism', {level: 24, width: 256, height: 256, depth: 256}, 'uint8', {width: 256.0, height: 256.0, depth: 256.0}); 

  dataset_url="http://molniya.sci.utah.edu/mod_visus?action=readdataset&dataset=cracked"
  level=24

  query_str = visusAsyncLoadDataset(dataset_url).then(function (dataset) {

    //lauch visus_widget
    visus1=VisusVR({
      id : 'visus1',
      dataset : dataset,
      compression : 'raw',
      showNavigator : false,
      debugMode : false
    }); 
    
    refresh();

    data_size=[256, 256, 256]
    dtype='uint8'

    fetch(visus1.query_str, {method:'get'})
      .then(response => {
        if (!response.ok)
          throw new Error('Response not ok: ' + response.statusText)
        
        nsamples=response.headers.get('visus-nsamples')
        var dims=nsamples.split(' ');
        data_size[0]=parseInt(dims[0]);
        data_size[1]=parseInt(dims[1]);
        data_size[2]=parseInt(dims[2]);

        console.log(dtype)
        console.log(data_size)

        dtype=response.headers.get('visus-dtype')

        return response.arrayBuffer()
      }).then(data => {
        
        upload_data(gl, data, {level: level, width: data_size[0], height: data_size[1], depth: data_size[2]}, dtype, 
                    {width: data_size[0], height: data_size[1], depth: data_size[2]})

        viewer.style.display = 'block'
        present()
      })

  });  

  

}
 
</script> 

</body></html>